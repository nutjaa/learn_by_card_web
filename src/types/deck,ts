/* eslint-disable @typescript-eslint/no-explicit-any */

import { BaseModel } from './base';
import { Group, Style } from './index';

export class Deck extends BaseModel {
  numActiveFlashcards?: number;
  group?: Group;
  style?: Style;

  constructor(data: Partial<Deck>) {
    super(data);
    this.numActiveFlashcards = data.numActiveFlashcards || 0;
    this.group = data.group ? new Group(data.group) : undefined;
    this.style = data.style ? new Style(data.style) : undefined;
  }

  static fromJSON(json: Record<string, any>): Deck {
    return new Deck({
      id: json.id,
      numActiveFlashcards: json.numActiveFlashcards || 0,
      group: json.group ? Group.fromJSON(json.group) : undefined,
      style: json.style ? Style.fromJSON(json.style) : undefined,
      created: json.created ? new Date(json.created) : undefined,
      updated: json.updated ? new Date(json.updated) : undefined,
    });
  }

  protected getSerializableFields(): Record<string, any> {
    return {
      numActiveFlashcards: this.numActiveFlashcards,
      group: this.group ? this.group.toJSON() : undefined,
      style: this.style ? this.style.toJSON() : undefined,
    };
  }

  getIri(): string {
    return this.generateIri('/api/decks');
  }
}
